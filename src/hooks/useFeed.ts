import { useState, useEffect, useCallback } from 'react';
import { useAuth } from '../contexts/AuthContext';
import { FeedPost, PostStats, SortOption } from '../types/feed';

// Hook for managing social feed posts

// Hook for managing feed posts

export const useFeed = (sortBy: SortOption = 'recent', searchTags: string[] = []) => {
  const { user } = useAuth();
  const [posts, setPosts] = useState<FeedPost[]>([]);
  const [loading, setLoading] = useState(true);
  const [postStats, setPostStats] = useState<{ [postId: string]: PostStats }>({});

  // Generate mock posts with diverse users and content
  const generateMockPosts = (): FeedPost[] => {
    return [
      {
        id: 'post-1',
        creator_id: 'creator-1',
        creator: {
          id: 'creator-1',
          username: 'ai_voice_master',
          display_name: 'AI Voice Master',
          profile_img_url: 'https://picsum.photos/64/64?random=1',
          verified: true,
          follower_count: 25420,
          created_at: new Date().toISOString()
        },
        type: 'audio',
        title: 'Revolutionary Voice Cloning Technology',
        description: 'Experience the future of AI voice synthesis with this breakthrough demonstration. This voice was generated using advanced neural networks trained on minimal data.',
        content_url: '/test_audio.mp3',
        thumbnail_url: 'https://picsum.photos/400/300?random=1',
        duration: 180,
        tags: ['AI', 'Voice-Cloning', 'Technology', 'Innovation', 'Neural-Networks'],
        view_count: 15240,
        created_at: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
        updated_at: new Date().toISOString()
      },
      {
        id: 'post-2',
        creator_id: 'creator-2',
        creator: {
          id: 'creator-2',
          username: 'podcast_sarah',
          display_name: 'Sarah Chen',
          profile_img_url: 'https://picsum.photos/64/64?random=2',
          verified: false,
          follower_count: 8930,
          created_at: new Date().toISOString()
        },
        type: 'audio',
        title: 'Daily Tech News - AI Breakthrough',
        description: 'Today we discuss the latest developments in artificial intelligence, machine learning breakthroughs, and their impact on society.',
        content_url: '/test_audio.mp3',
        thumbnail_url: 'https://picsum.photos/400/300?random=2',
        duration: 420,
        tags: ['Podcast', 'Tech', 'News', 'AI', 'Machine-Learning'],
        view_count: 8560,
        created_at: new Date(Date.now() - 4 * 60 * 60 * 1000).toISOString(),
        updated_at: new Date().toISOString()
      },
      {
        id: 'post-3',
        creator_id: 'creator-3',
        creator: {
          id: 'creator-3',
          username: 'voice_artist_mike',
          display_name: 'Mike Rodriguez',
          profile_img_url: 'https://picsum.photos/64/64?random=3',
          verified: true,
          follower_count: 43100,
          created_at: new Date().toISOString()
        },
        type: 'audio',
        title: 'Mastering Voice Acting Techniques',
        description: 'Learn professional voice acting techniques from a 15-year industry veteran. Perfect for aspiring voice actors and content creators.',
        content_url: '/test_audio.mp3',
        thumbnail_url: 'https://picsum.photos/400/300?random=3',
        duration: 900,
        tags: ['Voice-Acting', 'Education', 'Tutorial', 'Entertainment', 'Professional'],
        view_count: 21800,
        created_at: new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString(),
        updated_at: new Date().toISOString()
      },
      {
        id: 'post-4',
        creator_id: 'creator-4',
        creator: {
          id: 'creator-4',
          username: 'music_producer_alex',
          display_name: 'Alex Thompson',
          profile_img_url: 'https://picsum.photos/64/64?random=4',
          verified: false,
          follower_count: 12750,
          created_at: new Date().toISOString()
        },
        type: 'audio',
        title: 'AI-Generated Ambient Music',
        description: 'Relaxing ambient music entirely generated by AI. Perfect for studying, meditation, or background ambiance.',
        content_url: '/test_audio.mp3',
        thumbnail_url: 'https://picsum.photos/400/300?random=4',
        duration: 600,
        tags: ['Music', 'AI-Generated', 'Ambient', 'Relaxation', 'Study'],
        view_count: 9240,
        created_at: new Date(Date.now() - 8 * 60 * 60 * 1000).toISOString(),
        updated_at: new Date().toISOString()
      },
      {
        id: 'post-5',
        creator_id: 'creator-5',
        creator: {
          id: 'creator-5',
          username: 'dr_linguistics',
          display_name: 'Dr. Emma Wilson',
          profile_img_url: 'https://picsum.photos/64/64?random=5',
          verified: true,
          follower_count: 18600,
          created_at: new Date().toISOString()
        },
        type: 'audio',
        title: 'The Science of Speech Synthesis',
        description: 'A deep dive into the linguistic and technical aspects of how AI generates human-like speech patterns.',
        content_url: '/test_audio.mp3',
        thumbnail_url: 'https://picsum.photos/400/300?random=5',
        duration: 720,
        tags: ['Science', 'Linguistics', 'Speech-Synthesis', 'Education', 'Research'],
        view_count: 6450,
        created_at: new Date(Date.now() - 10 * 60 * 60 * 1000).toISOString(),
        updated_at: new Date().toISOString()
      },
      {
        id: 'post-6',
        creator_id: 'creator-6',
        creator: {
          id: 'creator-6',
          username: 'gaming_streamer_jay',
          display_name: 'Jay Kumar',
          profile_img_url: 'https://picsum.photos/64/64?random=6',
          verified: false,
          follower_count: 35200,
          created_at: new Date().toISOString()
        },
        type: 'audio',
        title: 'AI Voice Chat in Gaming',
        description: 'Demonstrating real-time AI voice modulation for gaming. Change your voice on the fly during live gameplay!',
        content_url: '/test_audio.mp3',
        thumbnail_url: 'https://picsum.photos/400/300?random=6',
        duration: 480,
        tags: ['Gaming', 'AI', 'Voice-Modulation', 'Streaming', 'Real-Time'],
        view_count: 18900,
        created_at: new Date(Date.now() - 12 * 60 * 60 * 1000).toISOString(),
        updated_at: new Date().toISOString()
      },
      {
        id: 'post-7',
        creator_id: 'creator-7',
        creator: {
          id: 'creator-7',
          username: 'business_coach_maria',
          display_name: 'Maria Garcia',
          profile_img_url: 'https://picsum.photos/64/64?random=7',
          verified: true,
          follower_count: 22800,
          created_at: new Date().toISOString()
        },
        type: 'audio',
        title: 'AI in Business Communication',
        description: 'How AI voice technology is revolutionizing business presentations, customer service, and corporate training.',
        content_url: '/test_audio.mp3',
        thumbnail_url: 'https://picsum.photos/400/300?random=7',
        duration: 540,
        tags: ['Business', 'Communication', 'AI', 'Corporate', 'Training'],
        view_count: 7320,
        created_at: new Date(Date.now() - 14 * 60 * 60 * 1000).toISOString(),
        updated_at: new Date().toISOString()
      },
      {
        id: 'post-8',
        creator_id: 'creator-8',
        creator: {
          id: 'creator-8',
          username: 'audiobook_narrator',
          display_name: 'David Foster',
          profile_img_url: 'https://picsum.photos/64/64?random=8',
          verified: false,
          follower_count: 16400,
          created_at: new Date().toISOString()
        },
        type: 'audio',
        title: 'AI Audiobook Narration Demo',
        description: 'Sample of AI-generated audiobook narration. Compare this to traditional human narration and hear the difference.',
        content_url: '/test_audio.mp3',
        thumbnail_url: 'https://picsum.photos/400/300?random=8',
        duration: 780,
        tags: ['Audiobook', 'Narration', 'AI', 'Literature', 'Demo'],
        view_count: 5680,
        created_at: new Date(Date.now() - 16 * 60 * 60 * 1000).toISOString(),
        updated_at: new Date().toISOString()
      },
      {
        id: 'post-9',
        creator_id: 'creator-9',
        creator: {
          id: 'creator-9',
          username: 'language_teacher_anna',
          display_name: 'Anna Petrov',
          profile_img_url: 'https://picsum.photos/64/64?random=9',
          verified: false,
          follower_count: 9750,
          created_at: new Date().toISOString()
        },
        type: 'audio',
        title: 'Multilingual AI Voice Training',
        description: 'Learn how AI can help with pronunciation in multiple languages. Featured languages: English, Spanish, French, and Mandarin.',
        content_url: '/test_audio.mp3',
        thumbnail_url: 'https://picsum.photos/400/300?random=9',
        duration: 660,
        tags: ['Education', 'Languages', 'Multilingual', 'Pronunciation', 'Learning'],
        view_count: 11200,
        created_at: new Date(Date.now() - 18 * 60 * 60 * 1000).toISOString(),
        updated_at: new Date().toISOString()
      },
      {
        id: 'post-10',
        creator_id: 'creator-10',
        creator: {
          id: 'creator-10',
          username: 'accessibility_advocate',
          display_name: 'Lisa Johnson',
          profile_img_url: 'https://picsum.photos/64/64?random=10',
          verified: true,
          follower_count: 14300,
          created_at: new Date().toISOString()
        },
        type: 'audio',
        title: 'AI Voice for Accessibility',
        description: 'How AI voice technology is making content more accessible for people with visual impairments and reading difficulties.',
        content_url: '/test_audio.mp3',
        thumbnail_url: 'https://picsum.photos/400/300?random=10',
        duration: 420,
        tags: ['Accessibility', 'Inclusion', 'AI', 'Assistive-Technology', 'Social-Impact'],
        view_count: 8900,
        created_at: new Date(Date.now() - 20 * 60 * 60 * 1000).toISOString(),
        updated_at: new Date().toISOString()
      }
    ];
  };

  const generatePostStats = useCallback((postId: string): PostStats => {
    // Get persistent user reaction from localStorage
    const userReactionKey = `user_reaction_${postId}_${user?.id}`;
    const userReaction = localStorage.getItem(userReactionKey) as ('❤️' | '👏' | '🔥' | '🎵') | null;

    // Get or generate persistent stats
    const statsKey = `post_stats_${postId}`;
    const storedStats = localStorage.getItem(statsKey);
    
    if (storedStats) {
      const stats = JSON.parse(storedStats);
      return {
        ...stats,
        user_reaction: userReaction || undefined
      };
    }

    // Generate new stats
    const stats: PostStats = {
      reaction_counts: {
        '❤️': Math.floor(Math.random() * 25) + 5,
        '👏': Math.floor(Math.random() * 15) + 2,
        '🔥': Math.floor(Math.random() * 12) + 1,
        '🎵': Math.floor(Math.random() * 8) + 1,
      },
      comment_count: Math.floor(Math.random() * 30) + 3,
      star_count: Math.floor(Math.random() * 50) + 10,
      star_value: (Math.floor(Math.random() * 50) + 10) * 0.01,
      user_reaction: userReaction || undefined
    };

    localStorage.setItem(statsKey, JSON.stringify(stats));
    return stats;
  }, [user]);

  const fetchPosts = useCallback(async () => {
    setLoading(true);
    
    // Simulate API delay
    await new Promise(resolve => setTimeout(resolve, 500));
    
    const mockPosts = generateMockPosts();
    
    // Filter posts by tags if search tags are provided
    let filteredPosts = mockPosts;
    if (searchTags.length > 0) {
      filteredPosts = mockPosts.filter(post => 
        searchTags.some(searchTag => 
          post.tags.some(postTag => 
            postTag.toLowerCase().includes(searchTag.toLowerCase())
          )
        )
      );
    }
    
    // Apply sorting
    const sortedPosts = [...filteredPosts].sort((a, b) => {
      switch (sortBy) {
        case 'recent':
          return new Date(b.created_at).getTime() - new Date(a.created_at).getTime();
        case 'popular':
          return b.view_count - a.view_count;
        case 'trending': {
          // Simple trending: recent posts with high views
          const aScore = a.view_count / (Date.now() - new Date(a.created_at).getTime());
          const bScore = b.view_count / (Date.now() - new Date(b.created_at).getTime());
          return bScore - aScore;
        }
        case 'following':
          return new Date(b.created_at).getTime() - new Date(a.created_at).getTime();
        default:
          return 0;
      }
    });

    setPosts(sortedPosts);

    // Generate stats for each post
    const statsMap = sortedPosts.reduce((acc, post) => {
      acc[post.id] = generatePostStats(post.id);
      return acc;
    }, {} as { [postId: string]: PostStats });

    setPostStats(statsMap);
    setLoading(false);
  }, [sortBy, searchTags, generatePostStats]);

  useEffect(() => {
    fetchPosts();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [sortBy, searchTags]); // Re-fetch when sortBy or searchTags change

  // Function to get all unique tags from all posts
  const getAllTags = useCallback(() => {
    const mockPosts = generateMockPosts();
    const allTags = new Set<string>();
    mockPosts.forEach(post => {
      post.tags.forEach(tag => allTags.add(tag));
    });
    return Array.from(allTags).sort();
  }, []);

  const addReaction = async (postId: string, reactionType: '❤️' | '👏' | '🔥' | '🎵') => {
    if (!user) return;

    const userReactionKey = `user_reaction_${postId}_${user.id}`;
    const currentReaction = localStorage.getItem(userReactionKey);

    // Update user reaction
    if (currentReaction === reactionType) {
      // Remove reaction if same
      localStorage.removeItem(userReactionKey);
    } else {
      // Set new reaction
      localStorage.setItem(userReactionKey, reactionType);
    }

    // Update post stats
    setPostStats(prev => {
      const currentStats = prev[postId];
      if (!currentStats) return prev;

      const newReactionCounts = { ...currentStats.reaction_counts };
      
      // Remove old reaction count
      if (currentReaction && newReactionCounts[currentReaction as keyof typeof newReactionCounts]) {
        newReactionCounts[currentReaction as keyof typeof newReactionCounts]--;
      }
      
      // Add new reaction count or remove if same
      if (currentReaction === reactionType) {
        // Removing reaction, already decremented above
      } else {
        newReactionCounts[reactionType]++;
      }

      const newStats = {
        ...currentStats,
        reaction_counts: newReactionCounts,
        user_reaction: currentReaction === reactionType ? undefined : reactionType
      };

      // Persist the updated stats
      const statsKey = `post_stats_${postId}`;
      localStorage.setItem(statsKey, JSON.stringify(newStats));

      return {
        ...prev,
        [postId]: newStats
      };
    });
  };

  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  const sendStarDonation = async (postId: string, starCount: number, _message?: string) => {
    if (!user) return;

    // Update star count in stats
    setPostStats(prev => {
      const currentStats = prev[postId];
      if (!currentStats) return prev;

      const newStats = {
        ...currentStats,
        star_count: currentStats.star_count + starCount,
        star_value: currentStats.star_value + (starCount * 0.01)
      };

      // Persist the updated stats
      const statsKey = `post_stats_${postId}`;
      localStorage.setItem(statsKey, JSON.stringify(newStats));

      return {
        ...prev,
        [postId]: newStats
      };
    });
  };

  return {
    posts,
    postStats,
    loading,
    addReaction,
    sendStarDonation,
    getAllTags
  };
};